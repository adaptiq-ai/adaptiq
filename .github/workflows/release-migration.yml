name: Release Migration

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write

jobs:
  release:
    if: github.event.pull_request.merged == true && github.event.pull_request.head.ref == 'pre-release'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to access full git history

      - name: Ensure on Main Branch
        run: |
          git checkout main
          git pull origin main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build toml

      - name: Get Version
        id: get-version
        run: |
          VERSION=""
          if [ -f "pyproject.toml" ]; then
            VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          elif [ -f "src/adaptiq/__init__.py" ]; then
            VERSION=$(grep '__version__' src/adaptiq/__init__.py | sed -E "s/.*['\"](.+)['\"].*/\1/")
          fi
          echo "VERSION=$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Tag and Push
        run: |
          VERSION=${{ steps.get-version.outputs.version }}
          git config user.name "GitHub Actions"
          git config user.email "action@github.com"
          git tag -a "v$VERSION" $GITHUB_SHA -m "Release v$VERSION"
          git push origin "v$VERSION"

      # - name: Build Package
      #   run: |
      #     python -m build

      # - name: Publish to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     password: ${{ secrets.PYPI_API_TOKEN }}
